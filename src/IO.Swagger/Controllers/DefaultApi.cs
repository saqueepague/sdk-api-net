/*
 * Saque e Pague Transacional
 *
 * Modelo de API para transações da Saque e Pague. O parceiro interessado deve implementar as operações desejadas para que a SeP consiga se comunicar com o mesmo.
 *
 * OpenAPI spec version: 1.17.2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.WebUtilities;
using Microsoft.Extensions.Logging;
using Microsoft.Extensions.Primitives;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using IO.Swagger.Attributes;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    public class DefaultApiController : Controller
    { 
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Operação de autenticacao de cliente sem cartão, chamada para retornar o nome do cliente autenticado.</remarks>
        /// <param name="authenticationType">Tipo de autenticação requerida.</param>
        /// <param name="clientId">Identificação do cliente.</param>
        /// <param name="token">Chave para validação do acesso ao serviço.</param>
        /// <param name="body">Requisição de autenticação.</param>
        /// <response code="200">Retorno com sucesso.</response>
        [HttpPost]
        [Route("/saqueepague/SepTransaction/1.17.2/autenticacao")]
        [ValidateModelState]
        [SwaggerOperation("AutenticacaoPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(AutenticacaoResp), description: "Retorno com sucesso.")]
        public virtual IActionResult AutenticacaoPost([FromHeader][Required()]string authenticationType, [FromHeader][Required()]string clientId, [FromHeader][Required()]string token, [FromBody]AutenticacaoReq body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(AutenticacaoResp));

            string exampleJson = null;
            exampleJson = "{\n  \"InfTransacao\" : {\n    \"cdProc\" : \"029100\",\n    \"mensagemCliente\" : \"\",\n    \"nsu\" : \"000080247206\",\n    \"codMoeda\" : \"986\",\n    \"codOperadora\" : \"00000000914\",\n    \"dataLocal\" : \"1122\",\n    \"errorMessage\" : \"\",\n    \"valor\" : \"5000\",\n    \"horaLocal\" : \"151032\",\n    \"nsuResposta\" : \"820\",\n    \"dataHora\" : \"1122151032\"\n  },\n  \"Cripto\" : {\n    \"hash\" : \"hash\"\n  },\n  \"InfAutenticacao\" : {\n    \"nomeCliente\" : \"Carl Edward Sagan\"\n  },\n  \"Terminal\" : {\n    \"codEstab\" : \"000000000742673\",\n    \"tipo\" : \"008\",\n    \"id\" : \"05100004\"\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<AutenticacaoResp>(exampleJson)
            : default(AutenticacaoResp);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Confirmação de operação de compra de títulos de capitalização.</remarks>
        /// <param name="authenticationType">Tipo de autenticação requerida.</param>
        /// <param name="clientId">Identificação do cliente.</param>
        /// <param name="token">Chave para validação do acesso ao serviço.</param>
        /// <param name="body">Requisição de confirmação de operação de compra de titulos de capitalizacao</param>
        /// <response code="200">Retorno com sucesso.</response>
        [HttpPost]
        [Route("/saqueepague/SepTransaction/1.17.2/compraTitulosCapitalizacaoConf")]
        [ValidateModelState]
        [SwaggerOperation("CompraTitulosCapitalizacaoConfPost")]
        public virtual IActionResult CompraTitulosCapitalizacaoConfPost([FromHeader][Required()]string authenticationType, [FromHeader][Required()]string clientId, [FromHeader][Required()]string token, [FromBody]TransacConf body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Operação de compra de títulos de capitalização.</remarks>
        /// <param name="authenticationType">Tipo de autenticação requerida.</param>
        /// <param name="clientId">Identificação do cliente.</param>
        /// <param name="token">Chave para validação do acesso ao serviço.</param>
        /// <param name="body">Requisição de operação de compra de títulos de capitalização.</param>
        /// <response code="200">Retorno com sucesso.</response>
        [HttpPost]
        [Route("/saqueepague/SepTransaction/1.17.2/compraTitulosCapitalizacao")]
        [ValidateModelState]
        [SwaggerOperation("CompraTitulosCapitalizacaoPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(CompraTitulosCapitalizacaoResp), description: "Retorno com sucesso.")]
        public virtual IActionResult CompraTitulosCapitalizacaoPost([FromHeader][Required()]string authenticationType, [FromHeader][Required()]string clientId, [FromHeader][Required()]string token, [FromBody]CompraTitulosCapitalizacaoReq body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(CompraTitulosCapitalizacaoResp));

            string exampleJson = null;
            exampleJson = "{\n  \"InfCompraTitulosCapitalizacao\" : {\n    \"recibo\" : \"@               TITULOS COMPRADOS                @                                                @ NOME DO TITULO:  XXXXXXXXXXXXX                 @ QUANTIDADE: 2                                  @ VALOR: R$ 25,00                                @ VALOR TOTAL: R$ 50,00                          @ TELEFONE: 05199999999                          @ CPF: 02358422785                               \"\n  },\n  \"InfTransacao\" : {\n    \"cdProc\" : \"029100\",\n    \"mensagemCliente\" : \"\",\n    \"nsu\" : \"000080247206\",\n    \"codMoeda\" : \"986\",\n    \"codOperadora\" : \"00000000914\",\n    \"dataLocal\" : \"1122\",\n    \"errorMessage\" : \"\",\n    \"valor\" : \"5000\",\n    \"horaLocal\" : \"151032\",\n    \"nsuResposta\" : \"820\",\n    \"dataHora\" : \"1122151032\"\n  },\n  \"Terminal\" : {\n    \"codEstab\" : \"000000000742673\",\n    \"tipo\" : \"008\",\n    \"id\" : \"05100004\"\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<CompraTitulosCapitalizacaoResp>(exampleJson)
            : default(CompraTitulosCapitalizacaoResp);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Operação de consulta de conta de favorecido, usada previamente ao depósito para verificar se a conta é válida e está habilitada para depósito.</remarks>
        /// <param name="authenticationType">Tipo de autenticação requerida.</param>
        /// <param name="clientId">Identificação do cliente.</param>
        /// <param name="token">Chave para validação do acesso ao serviço.</param>
        /// <param name="body">Requisição de consulta de conta.</param>
        /// <response code="200">Retorno com sucesso.</response>
        [HttpPost]
        [Route("/saqueepague/SepTransaction/1.17.2/consultaConta")]
        [ValidateModelState]
        [SwaggerOperation("ConsultaContaPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(ConsultaContaResp), description: "Retorno com sucesso.")]
        public virtual IActionResult ConsultaContaPost([FromHeader][Required()]string authenticationType, [FromHeader][Required()]string clientId, [FromHeader][Required()]string token, [FromBody]ConsultaContaReq body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ConsultaContaResp));

            string exampleJson = null;
            exampleJson = "{\n  \"InfTransacao\" : {\n    \"cdProc\" : \"029100\",\n    \"mensagemCliente\" : \"\",\n    \"nsu\" : \"000080247206\",\n    \"codMoeda\" : \"986\",\n    \"codOperadora\" : \"00000000914\",\n    \"dataLocal\" : \"1122\",\n    \"errorMessage\" : \"\",\n    \"valor\" : \"5000\",\n    \"horaLocal\" : \"151032\",\n    \"nsuResposta\" : \"820\",\n    \"dataHora\" : \"1122151032\"\n  },\n  \"InfConsultaConta\" : {\n    \"solicDoc\" : \"00\",\n    \"modalidadeDeposito\" : \"00\",\n    \"nomeCliente\" : \"Carl Edward Sagan\",\n    \"depositoIdentificado\" : \"00\",\n    \"habilitaDeposito\" : \"01\"\n  },\n  \"Cripto\" : {\n    \"hash\" : \"hash\"\n  },\n  \"Terminal\" : {\n    \"codEstab\" : \"000000000742673\",\n    \"tipo\" : \"008\",\n    \"id\" : \"05100004\"\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ConsultaContaResp>(exampleJson)
            : default(ConsultaContaResp);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Operação de consulta dos limites disponíveis para empréstimo. Esta operação é válida somente com os dados do cartão.</remarks>
        /// <param name="authenticationType">Tipo de autenticação requerida.</param>
        /// <param name="clientId">Identificação do cliente.</param>
        /// <param name="token">Chave para validação do acesso ao serviço.</param>
        /// <param name="body">Requisição de consulta limites de empréstimo, usando dados do cartão.</param>
        /// <response code="200">Retorno com sucesso.</response>
        [HttpPost]
        [Route("/saqueepague/SepTransaction/1.17.2/consultaLimitesEmprestimo")]
        [ValidateModelState]
        [SwaggerOperation("ConsultaLimitesEmprestimoPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(ConsultaLimitesEmprestimoResp), description: "Retorno com sucesso.")]
        public virtual IActionResult ConsultaLimitesEmprestimoPost([FromHeader][Required()]string authenticationType, [FromHeader][Required()]string clientId, [FromHeader][Required()]string token, [FromBody]ConsultaLimitesEmprestimoReq body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ConsultaLimitesEmprestimoResp));

            string exampleJson = null;
            exampleJson = "{\n  \"InfTransacao\" : {\n    \"cdProc\" : \"029100\",\n    \"mensagemCliente\" : \"\",\n    \"nsu\" : \"000080247206\",\n    \"codMoeda\" : \"986\",\n    \"codOperadora\" : \"00000000914\",\n    \"dataLocal\" : \"1122\",\n    \"errorMessage\" : \"\",\n    \"valor\" : \"5000\",\n    \"horaLocal\" : \"151032\",\n    \"nsuResposta\" : \"820\",\n    \"dataHora\" : \"1122151032\"\n  },\n  \"InfConsultaLimitesEmprestimo\" : {\n    \"limiteMinimoEmprestimo\" : \"000000500000\",\n    \"limiteMaximoEmprestimo\" : \"000005000000\",\n    \"nomeAgenciaBancaria\" : \"Agência bancária\",\n    \"nomeTitularConta\" : \"Carl Edward Sagan\"\n  },\n  \"Cripto\" : {\n    \"hash\" : \"hash\"\n  },\n  \"Terminal\" : {\n    \"codEstab\" : \"000000000742673\",\n    \"tipo\" : \"008\",\n    \"id\" : \"05100004\"\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ConsultaLimitesEmprestimoResp>(exampleJson)
            : default(ConsultaLimitesEmprestimoResp);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Operação de consulta de condições disponíveis de parcelamento do empréstimo.</remarks>
        /// <param name="authenticationType">Tipo de autenticação requerida.</param>
        /// <param name="clientId">Identificação do cliente.</param>
        /// <param name="token">Chave para validação do acesso ao serviço.</param>
        /// <param name="body">Requisição de consulta parcelas de empréstimo.</param>
        /// <response code="200">Retorno com sucesso.</response>
        [HttpPost]
        [Route("/saqueepague/SepTransaction/1.17.2/consultaParcelasEmprestimo")]
        [ValidateModelState]
        [SwaggerOperation("ConsultaParcelasEmprestimoPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(ConsultaParcelasEmprestimoResp), description: "Retorno com sucesso.")]
        public virtual IActionResult ConsultaParcelasEmprestimoPost([FromHeader][Required()]string authenticationType, [FromHeader][Required()]string clientId, [FromHeader][Required()]string token, [FromBody]ConsultaParcelasEmprestimoReq body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ConsultaParcelasEmprestimoResp));

            string exampleJson = null;
            exampleJson = "{\n  \"InfConsultaParcelasEmprestimo\" : {\n    \"opcoesParcelas\" : [ {\n      \"valorParcela\" : \"000000005000\",\n      \"qntParcelas\" : \"5\"\n    }, {\n      \"valorParcela\" : \"000000005000\",\n      \"qntParcelas\" : \"5\"\n    } ],\n    \"dataPrimeiraParcela\" : \"20181122\"\n  },\n  \"InfTransacao\" : {\n    \"cdProc\" : \"029100\",\n    \"mensagemCliente\" : \"\",\n    \"nsu\" : \"000080247206\",\n    \"codMoeda\" : \"986\",\n    \"codOperadora\" : \"00000000914\",\n    \"dataLocal\" : \"1122\",\n    \"errorMessage\" : \"\",\n    \"valor\" : \"5000\",\n    \"horaLocal\" : \"151032\",\n    \"nsuResposta\" : \"820\",\n    \"dataHora\" : \"1122151032\"\n  },\n  \"Cripto\" : {\n    \"hash\" : \"hash\"\n  },\n  \"Terminal\" : {\n    \"codEstab\" : \"000000000742673\",\n    \"tipo\" : \"008\",\n    \"id\" : \"05100004\"\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ConsultaParcelasEmprestimoResp>(exampleJson)
            : default(ConsultaParcelasEmprestimoResp);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Operação de consulta dos possíveis produtos de recarga de transporte para o cartão informado pelo cliente. Operação relacionada a transação consultaProdutosRecarga.</remarks>
        /// <param name="authenticationType">Tipo de autenticação requerida.</param>
        /// <param name="clientId">Identificação do cliente.</param>
        /// <param name="token">Chave para validação do acesso ao serviço.</param>
        /// <param name="body">Requisição de consulta produtos de recarga disponíveis para um cartão.</param>
        /// <response code="200">Retorno com sucesso.</response>
        [HttpPost]
        [Route("/saqueepague/SepTransaction/1.17.2/consultaProdutosRecarga")]
        [ValidateModelState]
        [SwaggerOperation("ConsultaProdutosRecargaPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(ConsultaProdutosRecargaResp), description: "Retorno com sucesso.")]
        public virtual IActionResult ConsultaProdutosRecargaPost([FromHeader][Required()]string authenticationType, [FromHeader][Required()]string clientId, [FromHeader][Required()]string token, [FromBody]ConsultaProdutosRecargaReq body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ConsultaProdutosRecargaResp));

            string exampleJson = null;
            exampleJson = "{\n  \"InfTransacao\" : {\n    \"cdProc\" : \"029100\",\n    \"mensagemCliente\" : \"\",\n    \"nsu\" : \"000080247206\",\n    \"codMoeda\" : \"986\",\n    \"codOperadora\" : \"00000000914\",\n    \"dataLocal\" : \"1122\",\n    \"errorMessage\" : \"\",\n    \"valor\" : \"5000\",\n    \"horaLocal\" : \"151032\",\n    \"nsuResposta\" : \"820\",\n    \"dataHora\" : \"1122151032\"\n  },\n  \"InfConsultaProdutosRecarga\" : {\n    \"products\" : [ {\n      \"name\" : \"Produto de Recarga\",\n      \"id\" : \"1\"\n    }, {\n      \"name\" : \"Produto de Recarga\",\n      \"id\" : \"1\"\n    } ]\n  },\n  \"Terminal\" : {\n    \"codEstab\" : \"000000000742673\",\n    \"tipo\" : \"008\",\n    \"id\" : \"05100004\"\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ConsultaProdutosRecargaResp>(exampleJson)
            : default(ConsultaProdutosRecargaResp);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Operação de consulta para saque de moeda estrangeira (câmbio). Efetuada para autenticar cliente, retornando valorde saque, moeda e dados adicionais.</remarks>
        /// <param name="authenticationType">Tipo de autenticação requerida.</param>
        /// <param name="clientId">Identificação do cliente.</param>
        /// <param name="token">Chave para validação do acesso ao serviço.</param>
        /// <param name="body">Requisição de consulta de saque.</param>
        /// <response code="200">Retorno com sucesso.</response>
        [HttpPost]
        [Route("/saqueepague/SepTransaction/1.17.2/consultaSaque")]
        [ValidateModelState]
        [SwaggerOperation("ConsultaSaquePost")]
        [SwaggerResponse(statusCode: 200, type: typeof(ConsultaSaqueResp), description: "Retorno com sucesso.")]
        public virtual IActionResult ConsultaSaquePost([FromHeader][Required()]string authenticationType, [FromHeader][Required()]string clientId, [FromHeader][Required()]string token, [FromBody]ConsultaSaqueReq body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ConsultaSaqueResp));

            string exampleJson = null;
            exampleJson = "{\n  \"InfTransacao\" : {\n    \"cdProc\" : \"029100\",\n    \"mensagemCliente\" : \"\",\n    \"nsu\" : \"000080247206\",\n    \"codMoeda\" : \"986\",\n    \"codOperadora\" : \"00000000914\",\n    \"dataLocal\" : \"1122\",\n    \"errorMessage\" : \"\",\n    \"valor\" : \"5000\",\n    \"horaLocal\" : \"151032\",\n    \"nsuResposta\" : \"820\",\n    \"dataHora\" : \"1122151032\"\n  },\n  \"InfConsultaSaque\" : {\n    \"perguntas\" : [ {\n      \"pergunta\" : \"Informe os 3 primeiros dígitos do seu CPF\",\n      \"tamResposta\" : \"3\",\n      \"id\" : \"1\"\n    }, {\n      \"pergunta\" : \"Informe os 3 primeiros dígitos do seu CPF\",\n      \"tamResposta\" : \"3\",\n      \"id\" : \"1\"\n    } ],\n    \"nomeCliente\" : \"Carl Edward Sagan\"\n  },\n  \"Terminal\" : {\n    \"codEstab\" : \"000000000742673\",\n    \"tipo\" : \"008\",\n    \"id\" : \"05100004\"\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ConsultaSaqueResp>(exampleJson)
            : default(ConsultaSaqueResp);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Operação de consulta de taxas dinâmicas, requisitado antes de depósito ou saque de carteira de digital.</remarks>
        /// <param name="authenticationType">Tipo de autenticação requerida.</param>
        /// <param name="clientId">Identificação do cliente.</param>
        /// <param name="token">Chave para validação do acesso ao serviço.</param>
        /// <param name="body">Requisição de consulta de taxas.</param>
        /// <response code="200">Retorno com sucesso.</response>
        [HttpPost]
        [Route("/saqueepague/SepTransaction/1.17.2/consultaTaxas")]
        [ValidateModelState]
        [SwaggerOperation("ConsultaTaxasPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(ConsultaTaxasResp), description: "Retorno com sucesso.")]
        public virtual IActionResult ConsultaTaxasPost([FromHeader][Required()]string authenticationType, [FromHeader][Required()]string clientId, [FromHeader][Required()]string token, [FromBody]ConsultaTaxasReq body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ConsultaTaxasResp));

            string exampleJson = null;
            exampleJson = "{\n  \"InfConsultaTaxas\" : {\n    \"transactions_fees\" : [ {\n      \"fees\" : [ {\n        \"min_amount\" : \"000\",\n        \"max_amount\" : \"10000\",\n        \"id\" : \"0201\",\n        \"value\" : \"000\"\n      }, {\n        \"min_amount\" : \"000\",\n        \"max_amount\" : \"10000\",\n        \"id\" : \"0201\",\n        \"value\" : \"000\"\n      } ],\n      \"name\" : \"deposit\",\n      \"id\" : \"01\"\n    }, {\n      \"fees\" : [ {\n        \"min_amount\" : \"000\",\n        \"max_amount\" : \"10000\",\n        \"id\" : \"0201\",\n        \"value\" : \"000\"\n      }, {\n        \"min_amount\" : \"000\",\n        \"max_amount\" : \"10000\",\n        \"id\" : \"0201\",\n        \"value\" : \"000\"\n      } ],\n      \"name\" : \"deposit\",\n      \"id\" : \"01\"\n    } ]\n  },\n  \"InfTransacao\" : {\n    \"cdProc\" : \"029100\",\n    \"mensagemCliente\" : \"\",\n    \"nsu\" : \"000080247206\",\n    \"codMoeda\" : \"986\",\n    \"codOperadora\" : \"00000000914\",\n    \"dataLocal\" : \"1122\",\n    \"errorMessage\" : \"\",\n    \"valor\" : \"5000\",\n    \"horaLocal\" : \"151032\",\n    \"nsuResposta\" : \"820\",\n    \"dataHora\" : \"1122151032\"\n  },\n  \"Cripto\" : {\n    \"hash\" : \"hash\"\n  },\n  \"Terminal\" : {\n    \"codEstab\" : \"000000000742673\",\n    \"tipo\" : \"008\",\n    \"id\" : \"05100004\"\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ConsultaTaxasResp>(exampleJson)
            : default(ConsultaTaxasResp);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Operação de consulta dos possíveis produtos de títulos de capitalização de uma operadora.</remarks>
        /// <param name="authenticationType">Tipo de autenticação requerida.</param>
        /// <param name="clientId">Identificação do cliente.</param>
        /// <param name="token">Chave para validação do acesso ao serviço.</param>
        /// <param name="body">Requisição de consulta produtos de títulos de capitalização.</param>
        /// <response code="200">Retorno com sucesso.</response>
        [HttpPost]
        [Route("/saqueepague/SepTransaction/1.17.2/consultaTitulosCapitalizacao")]
        [ValidateModelState]
        [SwaggerOperation("ConsultaTitulosCapitalizacaoPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(ConsultaTitulosCapitalizacaoResp), description: "Retorno com sucesso.")]
        public virtual IActionResult ConsultaTitulosCapitalizacaoPost([FromHeader][Required()]string authenticationType, [FromHeader][Required()]string clientId, [FromHeader][Required()]string token, [FromBody]ConsultaTitulosCapitalizacaoReq body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ConsultaTitulosCapitalizacaoResp));

            string exampleJson = null;
            exampleJson = "{\n  \"InfTransacao\" : {\n    \"cdProc\" : \"029100\",\n    \"mensagemCliente\" : \"\",\n    \"nsu\" : \"000080247206\",\n    \"codMoeda\" : \"986\",\n    \"codOperadora\" : \"00000000914\",\n    \"dataLocal\" : \"1122\",\n    \"errorMessage\" : \"\",\n    \"valor\" : \"5000\",\n    \"horaLocal\" : \"151032\",\n    \"nsuResposta\" : \"820\",\n    \"dataHora\" : \"1122151032\"\n  },\n  \"InfConsultaTitulosCapitalizacao\" : {\n    \"produtos\" : [ {\n      \"limiteMaximoCompra\" : \"4\",\n      \"tema\" : {\n        \"estilos\" : [ {\n          \"valor\" : \"#00288C\",\n          \"nome\" : \"cor-fundo ou cor-botao\"\n        }, {\n          \"valor\" : \"#00288C\",\n          \"nome\" : \"cor-fundo ou cor-botao\"\n        } ]\n      },\n      \"valor\" : \"000000000500\",\n      \"nome\" : \"Grêmio Mais\",\n      \"id\" : \"7\",\n      \"dataFimVigencia\" : \"20181130\",\n      \"dataInicioVigencia\" : \"20181122\",\n      \"detalhes\" : \"Edição ouro de mais um produto do Grêmio Mais\",\n      \"descricao\" : \"Edição 115 Anos\"\n    }, {\n      \"limiteMaximoCompra\" : \"4\",\n      \"tema\" : {\n        \"estilos\" : [ {\n          \"valor\" : \"#00288C\",\n          \"nome\" : \"cor-fundo ou cor-botao\"\n        }, {\n          \"valor\" : \"#00288C\",\n          \"nome\" : \"cor-fundo ou cor-botao\"\n        } ]\n      },\n      \"valor\" : \"000000000500\",\n      \"nome\" : \"Grêmio Mais\",\n      \"id\" : \"7\",\n      \"dataFimVigencia\" : \"20181130\",\n      \"dataInicioVigencia\" : \"20181122\",\n      \"detalhes\" : \"Edição ouro de mais um produto do Grêmio Mais\",\n      \"descricao\" : \"Edição 115 Anos\"\n    } ]\n  },\n  \"Terminal\" : {\n    \"codEstab\" : \"000000000742673\",\n    \"tipo\" : \"008\",\n    \"id\" : \"05100004\"\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ConsultaTitulosCapitalizacaoResp>(exampleJson)
            : default(ConsultaTitulosCapitalizacaoResp);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Operação de consulta dos produtos de recarga de cartão pré-pago de transporte. Traz uma lista de todas as operadoras e seus respectivos produtos/valores.</remarks>
        /// <param name="authenticationType">Tipo de autenticação requerida.</param>
        /// <param name="clientId">Identificação do cliente.</param>
        /// <param name="token">Chave para validação do acesso ao serviço.</param>
        /// <param name="body">Requisição de consulta valores de recarga de cartão.</param>
        /// <response code="200">Retorno com sucesso.</response>
        [HttpPost]
        [Route("/saqueepague/SepTransaction/1.17.2/consultaValoresRecarga")]
        [ValidateModelState]
        [SwaggerOperation("ConsultaValoresRecargaPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(ConsultaValoresRecargaResp), description: "Retorno com sucesso.")]
        public virtual IActionResult ConsultaValoresRecargaPost([FromHeader][Required()]string authenticationType, [FromHeader][Required()]string clientId, [FromHeader][Required()]string token, [FromBody]ConsultaValoresRecargaReq body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ConsultaValoresRecargaResp));

            string exampleJson = null;
            exampleJson = "{\n  \"InfTransacao\" : {\n    \"cdProc\" : \"029100\",\n    \"mensagemCliente\" : \"\",\n    \"nsu\" : \"000080247206\",\n    \"codMoeda\" : \"986\",\n    \"codOperadora\" : \"00000000914\",\n    \"dataLocal\" : \"1122\",\n    \"errorMessage\" : \"\",\n    \"valor\" : \"5000\",\n    \"horaLocal\" : \"151032\",\n    \"nsuResposta\" : \"820\",\n    \"dataHora\" : \"1122151032\"\n  },\n  \"InfConsultaValoresRecarga\" : {\n    \"valores\" : {\n      \"issuers\" : [ {\n        \"card_number_mask\" : \"XXXXXXXXXXXXXX-X\",\n        \"card_number_length\" : 15,\n        \"name\" : \"TEU\",\n        \"id\" : 1,\n        \"products\" : [ {\n          \"min_value\" : \"1000\",\n          \"fee\" : \"200\",\n          \"values\" : [ {\n            \"fee\" : \"200\",\n            \"id\" : \"1\",\n            \"value\" : \"2000\"\n          }, {\n            \"fee\" : \"200\",\n            \"id\" : \"1\",\n            \"value\" : \"2000\"\n          } ],\n          \"name\" : \"Bilhete Antecipado\",\n          \"id\" : \"1\",\n          \"max_value\" : \"9000\"\n        }, {\n          \"min_value\" : \"1000\",\n          \"fee\" : \"200\",\n          \"values\" : [ {\n            \"fee\" : \"200\",\n            \"id\" : \"1\",\n            \"value\" : \"2000\"\n          }, {\n            \"fee\" : \"200\",\n            \"id\" : \"1\",\n            \"value\" : \"2000\"\n          } ],\n          \"name\" : \"Bilhete Antecipado\",\n          \"id\" : \"1\",\n          \"max_value\" : \"9000\"\n        } ]\n      }, {\n        \"card_number_mask\" : \"XXXXXXXXXXXXXX-X\",\n        \"card_number_length\" : 15,\n        \"name\" : \"TEU\",\n        \"id\" : 1,\n        \"products\" : [ {\n          \"min_value\" : \"1000\",\n          \"fee\" : \"200\",\n          \"values\" : [ {\n            \"fee\" : \"200\",\n            \"id\" : \"1\",\n            \"value\" : \"2000\"\n          }, {\n            \"fee\" : \"200\",\n            \"id\" : \"1\",\n            \"value\" : \"2000\"\n          } ],\n          \"name\" : \"Bilhete Antecipado\",\n          \"id\" : \"1\",\n          \"max_value\" : \"9000\"\n        }, {\n          \"min_value\" : \"1000\",\n          \"fee\" : \"200\",\n          \"values\" : [ {\n            \"fee\" : \"200\",\n            \"id\" : \"1\",\n            \"value\" : \"2000\"\n          }, {\n            \"fee\" : \"200\",\n            \"id\" : \"1\",\n            \"value\" : \"2000\"\n          } ],\n          \"name\" : \"Bilhete Antecipado\",\n          \"id\" : \"1\",\n          \"max_value\" : \"9000\"\n        } ]\n      } ]\n    }\n  },\n  \"Cripto\" : {\n    \"hash\" : \"hash\"\n  },\n  \"Terminal\" : {\n    \"codEstab\" : \"000000000742673\",\n    \"tipo\" : \"008\",\n    \"id\" : \"05100004\"\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ConsultaValoresRecargaResp>(exampleJson)
            : default(ConsultaValoresRecargaResp);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Confirmação de operação de depósito.</remarks>
        /// <param name="authenticationType">Tipo de autenticação requerida.</param>
        /// <param name="clientId">Identificação do cliente.</param>
        /// <param name="token">Chave para validação do acesso ao serviço.</param>
        /// <param name="body">Requisição de confirmação de operação de depósito.</param>
        /// <response code="200">Retorno com sucesso.</response>
        [HttpPost]
        [Route("/saqueepague/SepTransaction/1.17.2/depositoConf")]
        [ValidateModelState]
        [SwaggerOperation("DepositoConfPost")]
        public virtual IActionResult DepositoConfPost([FromHeader][Required()]string authenticationType, [FromHeader][Required()]string clientId, [FromHeader][Required()]string token, [FromBody]TransacConf body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Operação de depósito em dinheiro, cartão é opcional nesta operação.</remarks>
        /// <param name="authenticationType">Tipo de autenticação requerida.</param>
        /// <param name="clientId">Identificação do cliente.</param>
        /// <param name="token">Chave para validação do acesso ao serviço.</param>
        /// <param name="body">Objeto da requisição de depósito, cartão é opcional.</param>
        /// <response code="200">Retorno com sucesso.</response>
        [HttpPost]
        [Route("/saqueepague/SepTransaction/1.17.2/deposito")]
        [ValidateModelState]
        [SwaggerOperation("DepositoPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(DepositoResp), description: "Retorno com sucesso.")]
        public virtual IActionResult DepositoPost([FromHeader][Required()]string authenticationType, [FromHeader][Required()]string clientId, [FromHeader][Required()]string token, [FromBody]DepositoReq body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(DepositoResp));

            string exampleJson = null;
            exampleJson = "{\n  \"InfTransacao\" : {\n    \"cdProc\" : \"029100\",\n    \"mensagemCliente\" : \"\",\n    \"nsu\" : \"000080247206\",\n    \"codMoeda\" : \"986\",\n    \"codOperadora\" : \"00000000914\",\n    \"dataLocal\" : \"1122\",\n    \"errorMessage\" : \"\",\n    \"valor\" : \"5000\",\n    \"horaLocal\" : \"151032\",\n    \"nsuResposta\" : \"820\",\n    \"dataHora\" : \"1122151032\"\n  },\n  \"Cripto\" : {\n    \"hash\" : \"hash\"\n  },\n  \"InfDeposito\" : {\n    \"recibo\" : \"@            COMPROVANTE DE DEPOSITO             @------------------------------------------------@ Agencia....: 0101                              @ Conta......: 74414-0                           @ Nome.......: EUGENIO SCHMITT COELHO            @@------------------------------------------------@ Favorecido: EUGENIO SCHMITT COELHO             @ Agencia Destino:                           0101@ Conta Destino:         Conta Corrente - 74414-0@@Tipo            NSU                        Valor@Dinheiro        697841472523             R$20,00@------------------------------------------------@               SAC - 0800 123 4569@      SAC - DEF. AUDITIVO - 0800 123 4568@            OUVIDORIA - 0800 123 4567@@             www.siteparceiro.com.br@\"\n  },\n  \"Terminal\" : {\n    \"codEstab\" : \"000000000742673\",\n    \"tipo\" : \"008\",\n    \"id\" : \"05100004\"\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<DepositoResp>(exampleJson)
            : default(DepositoResp);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Confirmação de operação de empréstimo.</remarks>
        /// <param name="authenticationType">Tipo de autenticação requerida.</param>
        /// <param name="clientId">Identificação do cliente.</param>
        /// <param name="token">Chave para validação do acesso ao serviço.</param>
        /// <param name="body">Requisição de confirmação de operação de empréstimo.</param>
        /// <response code="200">Retorno com sucesso.</response>
        [HttpPost]
        [Route("/saqueepague/SepTransaction/1.17.2/emprestimoConf")]
        [ValidateModelState]
        [SwaggerOperation("EmprestimoConfPost")]
        public virtual IActionResult EmprestimoConfPost([FromHeader][Required()]string authenticationType, [FromHeader][Required()]string clientId, [FromHeader][Required()]string token, [FromBody]TransacConf body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Operação de empréstimo.</remarks>
        /// <param name="authenticationType">Tipo de autenticação requerida.</param>
        /// <param name="clientId">Identificação do cliente.</param>
        /// <param name="token">Chave para validação do acesso ao serviço.</param>
        /// <param name="body">Requisição de empréstimo.</param>
        /// <response code="200">Retorno com sucesso.</response>
        [HttpPost]
        [Route("/saqueepague/SepTransaction/1.17.2/emprestimo")]
        [ValidateModelState]
        [SwaggerOperation("EmprestimoPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(EmprestimoResp), description: "Retorno com sucesso.")]
        public virtual IActionResult EmprestimoPost([FromHeader][Required()]string authenticationType, [FromHeader][Required()]string clientId, [FromHeader][Required()]string token, [FromBody]EmprestimoReq body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(EmprestimoResp));

            string exampleJson = null;
            exampleJson = "{\n  \"InfTransacao\" : {\n    \"cdProc\" : \"029100\",\n    \"mensagemCliente\" : \"\",\n    \"nsu\" : \"000080247206\",\n    \"codMoeda\" : \"986\",\n    \"codOperadora\" : \"00000000914\",\n    \"dataLocal\" : \"1122\",\n    \"errorMessage\" : \"\",\n    \"valor\" : \"5000\",\n    \"horaLocal\" : \"151032\",\n    \"nsuResposta\" : \"820\",\n    \"dataHora\" : \"1122151032\"\n  },\n  \"Cripto\" : {\n    \"hash\" : \"hash\"\n  },\n  \"Terminal\" : {\n    \"codEstab\" : \"000000000742673\",\n    \"tipo\" : \"008\",\n    \"id\" : \"05100004\"\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<EmprestimoResp>(exampleJson)
            : default(EmprestimoResp);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Confirmação de operação de extrato.</remarks>
        /// <param name="authenticationType">Tipo de autenticação requerida.</param>
        /// <param name="clientId">Identificação do cliente.</param>
        /// <param name="token">Chave para validação do acesso ao serviço.</param>
        /// <param name="body">Requisição de confirmação de operação de extrato.</param>
        /// <response code="200">Retorno com sucesso.</response>
        [HttpPost]
        [Route("/saqueepague/SepTransaction/1.17.2/extratoConf")]
        [ValidateModelState]
        [SwaggerOperation("ExtratoConfPost")]
        public virtual IActionResult ExtratoConfPost([FromHeader][Required()]string authenticationType, [FromHeader][Required()]string clientId, [FromHeader][Required()]string token, [FromBody]TransacConf body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Operação de extrato.</remarks>
        /// <param name="authenticationType">Tipo de autenticação requerida.</param>
        /// <param name="clientId">Identificação do cliente.</param>
        /// <param name="token">Chave para validação do acesso ao serviço.</param>
        /// <param name="body">Requisição de operação de extrato.</param>
        /// <response code="200">Retorno com sucesso.</response>
        [HttpPost]
        [Route("/saqueepague/SepTransaction/1.17.2/extrato")]
        [ValidateModelState]
        [SwaggerOperation("ExtratoPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(ExtratoResp), description: "Retorno com sucesso.")]
        public virtual IActionResult ExtratoPost([FromHeader][Required()]string authenticationType, [FromHeader][Required()]string clientId, [FromHeader][Required()]string token, [FromBody]ExtratoReq body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(ExtratoResp));

            string exampleJson = null;
            exampleJson = "{\n  \"InfExtrato\" : {\n    \"recibo\" : \"@                EXTRATO DE CONTA                @                                                @ CLIENTE: EUGENIO SCHMITT COELHO                @ AGENCIA: 0150 CONTA: 03.013689.0-1             @ SALDO DA CONTA                                 @ SALDO DEVEDOR...............R$          450,35-@ TOTAL DEVEDOR...............R$          450,35-@ LIMITE DA CONTA.............R$          100,00 @ LIMITE DA CONTA DISPONIVEL..R$          350,35-@--------- MOVIMENTOS DA CONTA CORRENTE ---------@@    SALDO ANT EM 18/01/2019               93,56-@    MOVIMENTOS JAN/2019                         @    COMPRAS           201218              85,68-@    COMPRAS           201218             139,14-@    COMPRAS           211218              20,70-@    COMPRAS           211218              39,00-@    SALDO NA DATA                        378,08-@\"\n  },\n  \"InfTransacao\" : {\n    \"cdProc\" : \"029100\",\n    \"mensagemCliente\" : \"\",\n    \"nsu\" : \"000080247206\",\n    \"codMoeda\" : \"986\",\n    \"codOperadora\" : \"00000000914\",\n    \"dataLocal\" : \"1122\",\n    \"errorMessage\" : \"\",\n    \"valor\" : \"5000\",\n    \"horaLocal\" : \"151032\",\n    \"nsuResposta\" : \"820\",\n    \"dataHora\" : \"1122151032\"\n  },\n  \"Cripto\" : {\n    \"hash\" : \"hash\"\n  },\n  \"Terminal\" : {\n    \"codEstab\" : \"000000000742673\",\n    \"tipo\" : \"008\",\n    \"id\" : \"05100004\"\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<ExtratoResp>(exampleJson)
            : default(ExtratoResp);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Operação de identificação do cliente e informações adicionais de sua conta.</remarks>
        /// <param name="authenticationType">Tipo de autenticação requerida.</param>
        /// <param name="clientId">Identificação do cliente.</param>
        /// <param name="token">Chave para validação do acesso ao serviço.</param>
        /// <param name="body">Requisição de identificação.</param>
        /// <response code="200">Retorno com sucesso.</response>
        [HttpPost]
        [Route("/saqueepague/SepTransaction/1.17.2/identificacao")]
        [ValidateModelState]
        [SwaggerOperation("IdentificacaoPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(IdentificacaoResp), description: "Retorno com sucesso.")]
        public virtual IActionResult IdentificacaoPost([FromHeader][Required()]string authenticationType, [FromHeader][Required()]string clientId, [FromHeader][Required()]string token, [FromBody]IdentificacaoReq body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(IdentificacaoResp));

            string exampleJson = null;
            exampleJson = "{\n  \"InfIdentificacao\" : {\n    \"pedirToken\" : \"01\",\n    \"frase\" : \"Informe o token gerado em seu app:\",\n    \"numAgencia\" : \"4029\",\n    \"perguntas\" : [ {\n      \"pergunta\" : \"Qual é o dia de seu aniversário?\",\n      \"tamResposta\" : \"2\",\n      \"id\" : \"1\"\n    }, {\n      \"pergunta\" : \"Qual é o dia de seu aniversário?\",\n      \"tamResposta\" : \"2\",\n      \"id\" : \"1\"\n    } ],\n    \"idPositiva\" : [ {\n      \"pos8\" : \"4E-8G-1P\",\n      \"idTela\" : \"1\",\n      \"pos4\" : \"P1-G8-E4\",\n      \"pos5\" : \"REG SOS\",\n      \"pos6\" : \"EN/UQ/AM\",\n      \"pos7\" : \"69 05 41\",\n      \"pos1\" : \"SOS GER\",\n      \"pos2\" : \"MA/QU/NE\",\n      \"pos3\" : \"14 50 96\"\n    }, {\n      \"pos8\" : \"4E-8G-1P\",\n      \"idTela\" : \"1\",\n      \"pos4\" : \"P1-G8-E4\",\n      \"pos5\" : \"REG SOS\",\n      \"pos6\" : \"EN/UQ/AM\",\n      \"pos7\" : \"69 05 41\",\n      \"pos1\" : \"SOS GER\",\n      \"pos2\" : \"MA/QU/NE\",\n      \"pos3\" : \"14 50 96\"\n    } ],\n    \"numConta\" : \"0082348296\",\n    \"transacValidas\" : \"068101068010\",\n    \"saldo\" : \"000000005000\"\n  },\n  \"InfTransacao\" : {\n    \"cdProc\" : \"029100\",\n    \"mensagemCliente\" : \"\",\n    \"nsu\" : \"000080247206\",\n    \"codMoeda\" : \"986\",\n    \"codOperadora\" : \"00000000914\",\n    \"dataLocal\" : \"1122\",\n    \"errorMessage\" : \"\",\n    \"valor\" : \"5000\",\n    \"horaLocal\" : \"151032\",\n    \"nsuResposta\" : \"820\",\n    \"dataHora\" : \"1122151032\"\n  },\n  \"Cripto\" : {\n    \"hash\" : \"hash\"\n  },\n  \"Terminal\" : {\n    \"codEstab\" : \"000000000742673\",\n    \"tipo\" : \"008\",\n    \"id\" : \"05100004\"\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<IdentificacaoResp>(exampleJson)
            : default(IdentificacaoResp);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Operação de confirmação de recarga de cartão pré-pago de transporte (bilhetagem).</remarks>
        /// <param name="authenticationType">Tipo de autenticação requerida.</param>
        /// <param name="clientId">Identificação do cliente.</param>
        /// <param name="token">Chave para validação do acesso ao serviço.</param>
        /// <param name="body">Requisição de confirmação de operação de recarga.</param>
        /// <response code="200">Retorno com sucesso.</response>
        [HttpPost]
        [Route("/saqueepague/SepTransaction/1.17.2/recargaConf")]
        [ValidateModelState]
        [SwaggerOperation("RecargaConfPost")]
        public virtual IActionResult RecargaConfPost([FromHeader][Required()]string authenticationType, [FromHeader][Required()]string clientId, [FromHeader][Required()]string token, [FromBody]TransacConf body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Operação de recarga de cartão pré-pago de transporte (bilhetagem) em dinheiro.</remarks>
        /// <param name="authenticationType">Tipo de autenticação requerida.</param>
        /// <param name="clientId">Identificação do cliente.</param>
        /// <param name="token">Chave para validação do acesso ao serviço.</param>
        /// <param name="body">Requisição de operação de recarga de um cartão.</param>
        /// <response code="200">Retorno com sucesso.</response>
        [HttpPost]
        [Route("/saqueepague/SepTransaction/1.17.2/recarga")]
        [ValidateModelState]
        [SwaggerOperation("RecargaPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(RecargaResp), description: "Retorno com sucesso.")]
        public virtual IActionResult RecargaPost([FromHeader][Required()]string authenticationType, [FromHeader][Required()]string clientId, [FromHeader][Required()]string token, [FromBody]RecargaReq body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(RecargaResp));

            string exampleJson = null;
            exampleJson = "{\n  \"InfRecarga\" : {\n    \"recibo\" : \"@             TEU BILHETE ANTECIPADO             @                                                @ CARTAO: 036200005433591                        @ VALOR DA RECARGA: R$ 48,00                     @ TAXAS: R$ 2,00                                 @ TOTAL PAGO: R$ 50,00                           \"\n  },\n  \"InfTransacao\" : {\n    \"cdProc\" : \"029100\",\n    \"mensagemCliente\" : \"\",\n    \"nsu\" : \"000080247206\",\n    \"codMoeda\" : \"986\",\n    \"codOperadora\" : \"00000000914\",\n    \"dataLocal\" : \"1122\",\n    \"errorMessage\" : \"\",\n    \"valor\" : \"5000\",\n    \"horaLocal\" : \"151032\",\n    \"nsuResposta\" : \"820\",\n    \"dataHora\" : \"1122151032\"\n  },\n  \"Cripto\" : {\n    \"hash\" : \"hash\"\n  },\n  \"Terminal\" : {\n    \"codEstab\" : \"000000000742673\",\n    \"tipo\" : \"008\",\n    \"id\" : \"05100004\"\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<RecargaResp>(exampleJson)
            : default(RecargaResp);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Confirmação de operação de consulta de saldo.</remarks>
        /// <param name="authenticationType">Tipo de autenticação requerida.</param>
        /// <param name="clientId">Identificação do cliente.</param>
        /// <param name="token">Chave para validação do acesso ao serviço.</param>
        /// <param name="body">Requisição de confirmação de operação de consulta de saldo.</param>
        /// <response code="200">Retorno com sucesso.</response>
        [HttpPost]
        [Route("/saqueepague/SepTransaction/1.17.2/saldoConf")]
        [ValidateModelState]
        [SwaggerOperation("SaldoConfPost")]
        public virtual IActionResult SaldoConfPost([FromHeader][Required()]string authenticationType, [FromHeader][Required()]string clientId, [FromHeader][Required()]string token, [FromBody]TransacConf body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Operação de consulta do valor de saldo disponível em conta.</remarks>
        /// <param name="authenticationType">Tipo de autenticação requerida.</param>
        /// <param name="clientId">Identificação do cliente.</param>
        /// <param name="token">Chave para validação do acesso ao serviço.</param>
        /// <param name="body">Requisição de operação de consulta de saldo.</param>
        /// <response code="200">Retorno com sucesso.</response>
        [HttpPost]
        [Route("/saqueepague/SepTransaction/1.17.2/saldo")]
        [ValidateModelState]
        [SwaggerOperation("SaldoPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(SaldoResp), description: "Retorno com sucesso.")]
        public virtual IActionResult SaldoPost([FromHeader][Required()]string authenticationType, [FromHeader][Required()]string clientId, [FromHeader][Required()]string token, [FromBody]SaldoReq body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(SaldoResp));

            string exampleJson = null;
            exampleJson = "{\n  \"InfSaldo\" : {\n    \"recibo\" : \"                 SALDO EM CONTA                @                036200005433591                @               13/10/2018  20:24                @          BANCO: BANCO SAQUE E PAGUE           @          AGENCIA: 4029                        @          CONTA: 0082348296                    @          VALOR NA DATA: R$ 50,00              \"\n  },\n  \"InfTransacao\" : {\n    \"cdProc\" : \"029100\",\n    \"mensagemCliente\" : \"\",\n    \"nsu\" : \"000080247206\",\n    \"codMoeda\" : \"986\",\n    \"codOperadora\" : \"00000000914\",\n    \"dataLocal\" : \"1122\",\n    \"errorMessage\" : \"\",\n    \"valor\" : \"5000\",\n    \"horaLocal\" : \"151032\",\n    \"nsuResposta\" : \"820\",\n    \"dataHora\" : \"1122151032\"\n  },\n  \"Cripto\" : {\n    \"hash\" : \"hash\"\n  },\n  \"Terminal\" : {\n    \"codEstab\" : \"000000000742673\",\n    \"tipo\" : \"008\",\n    \"id\" : \"05100004\"\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<SaldoResp>(exampleJson)
            : default(SaldoResp);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Confirmação de operação de saque.</remarks>
        /// <param name="authenticationType">Tipo de autenticação requerida.</param>
        /// <param name="clientId">Identificação do cliente.</param>
        /// <param name="token">Chave para validação do acesso ao serviço.</param>
        /// <param name="body">Requisição de confirmação de operação de saque.</param>
        /// <response code="200">Retorno com sucesso.</response>
        [HttpPost]
        [Route("/saqueepague/SepTransaction/1.17.2/saqueConf")]
        [ValidateModelState]
        [SwaggerOperation("SaqueConfPost")]
        public virtual IActionResult SaqueConfPost([FromHeader][Required()]string authenticationType, [FromHeader][Required()]string clientId, [FromHeader][Required()]string token, [FromBody]TransacConf body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200);


            throw new NotImplementedException();
        }

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Operação de saque de dinheiro em moeda local ou estrangeira.</remarks>
        /// <param name="authenticationType">Tipo de autenticação requerida.</param>
        /// <param name="clientId">Identificação do cliente.</param>
        /// <param name="token">Chave para validação do acesso ao serviço.</param>
        /// <param name="body">Requisição de operação de saque.</param>
        /// <response code="200">Retorno com sucesso.</response>
        [HttpPost]
        [Route("/saqueepague/SepTransaction/1.17.2/saque")]
        [ValidateModelState]
        [SwaggerOperation("SaquePost")]
        [SwaggerResponse(statusCode: 200, type: typeof(SaqueResp), description: "Retorno com sucesso.")]
        public virtual IActionResult SaquePost([FromHeader][Required()]string authenticationType, [FromHeader][Required()]string clientId, [FromHeader][Required()]string token, [FromBody]SaqueReq body)
        { 
            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(SaqueResp));

            string exampleJson = null;
            exampleJson = "{\n  \"InfSaque\" : {\n    \"recibo\" : \"                 SAQUE DE CONTA                 @                036200005433591                @               13/10/2018  20:24               @                 BANCO: BANCO                  @                AGENCIA: 4029                  @              CONTA: 0082348296                @               %VALOR%: R$ 50,00                 \"\n  },\n  \"InfTransacao\" : {\n    \"cdProc\" : \"029100\",\n    \"mensagemCliente\" : \"\",\n    \"nsu\" : \"000080247206\",\n    \"codMoeda\" : \"986\",\n    \"codOperadora\" : \"00000000914\",\n    \"dataLocal\" : \"1122\",\n    \"errorMessage\" : \"\",\n    \"valor\" : \"5000\",\n    \"horaLocal\" : \"151032\",\n    \"nsuResposta\" : \"820\",\n    \"dataHora\" : \"1122151032\"\n  },\n  \"Cripto\" : {\n    \"hash\" : \"hash\"\n  },\n  \"Terminal\" : {\n    \"codEstab\" : \"000000000742673\",\n    \"tipo\" : \"008\",\n    \"id\" : \"05100004\"\n  }\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<SaqueResp>(exampleJson)
            : default(SaqueResp);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
